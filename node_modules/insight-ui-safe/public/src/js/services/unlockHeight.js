'use strict';

angular.module('insight.unlockHeight').factory('UnlockHeight', function ( config ) {

    return {
        /**
         * SPOS 共识算法下的解锁高度重新计算
         * @param unlockHeight  交易解锁高度
         * @param blockHeight   交易入块高度
         * @returns {*}
         */
        getSposNewUnlockHeight : function( unlockHeight , blockHeight ){
            // SPOS 算法生效高度
            var sposStartHeight = config.spos.height;
            // POW 算法下的产块速度
            var powSpeed = config.pow.blockedSpeed;
            // SPOS 算法的产块速度
            var sposSpeed = config.spos.blockedSpeed;
            if ( sposStartHeight <= 0 || unlockHeight <= sposStartHeight ){
                return unlockHeight;
            }
            // 如果入块高度大于SPOS算法开始的高度,则不需要转换了.
            if ( blockHeight && (blockHeight >= sposStartHeight) ){
                return unlockHeight;
            }
            /*
             * 转换规则:锁定时间一致
             *  POW 算法下产生 N 个区块的时间 = SPOS 算法下产生 M 个区块的时间
             *  因为不同算法下的产块速度不一样,所以 SPOS 需要在更高的区块后才能解锁.
             *  ( H[unlockHeight] - H[sposStartHeight] ) * Speed[POW] = ( H[newUnlockHeight] - H[sposStartHeight] ) * Speed[SPOS]
             */
            var newUnlockHeight = ( unlockHeight - sposStartHeight ) * ( powSpeed / sposSpeed ) + sposStartHeight;
            console.log( 'UnlockHeight:' + unlockHeight + ' , Now newUnlockHeight:' + newUnlockHeight );
            return newUnlockHeight;
        }
    }

});

 