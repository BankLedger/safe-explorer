'use strict';

const async = require('async');

// async.waterfall( [
//     ( callback ) => { 
//         console.log('execute1');
//         callback( {a:1} );
//     },
//     ( callback , err ) => {
//         console.log('execute2');
//         console.log(err);
//         callback( null )
//     },
//     ( callback ) => {
//         console.log('execute3');
//         callback( null )
//     }
// ] , function( err ){
//     console.log(err);
// } );

// async.series({
//     dbHeight:function( callback ){
//         callback( {error:'Error1'} , 5 )
//     },
//     latestHeight:function( callback ){
//         callback( {error:'Error2'} , 10 )
//     }
// },function(err,results){
//     console.log(err);
//     console.log(results);
// })

// let a = 5;
// let b = 1;
// async.whilst(
//     function(){                 // Condition
//         b ++ ;
//         return b <=5
//     },
//     function(callback){         // Execution
//         callback( {error:'Error-Whilst'} )
//     },
//     function(error){                 // ALL FINISH
//         console.log(error);
//     }
// )

async.eachLimit( [1,2,3] , 2 , function( num , callback){
    console.log(num);
    callback({error:'a'});
},function(error){
    console.log(error);
    console.log('finish');
} )