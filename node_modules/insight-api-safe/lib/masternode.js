'use strict';

function Masternode(node) {
    this.node = node;
    this.getMasterNodeAll();
}

var masterList = [];
var masterNodeForKey = {};
var rate = 0;
var masterNodeLength = 0;
var rateCount = {};

/**
 * 返回主节点信息，可以根据IP 、地址模糊查询
 * @param req
 * @param res
 */
Masternode.prototype.list = function (req, res) {
    var pageNum = req.query.pageNum || 1;
    var params = req.query.params;
    var totalCount = pageNum * 10 > masterNodeLength ? masterNodeLength : pageNum * 10;

    if (params == "") {
        res.jsonp({
            list: masterList.slice((pageNum - 1) * 10, totalCount),
            more: pageNum * 10 < masterNodeLength,
            maxPage: Math.ceil(masterNodeLength / 10),
            listLength: masterNodeLength,
            rate: rate,
            rateCount:rateCount
        });
    } else {
        retrievalMasterNode(params, function (list) {
            totalCount = pageNum * 10 > list.length ? list.length : pageNum * 10;
            res.jsonp({
                list: list.slice((pageNum - 1) * 10, totalCount),
                more: pageNum * 10 < list.length,
                maxPage: Math.ceil(list.length / 10),
                listLength: masterNodeLength,
                rate: rate,
                rateCount:rateCount
            });
        })
    }
};

/**
 * 手动模糊查询 :(
 * @param params
 * @param callback
 */
var retrievalMasterNode = function (params, callback) {
    var list = [];
    for (var i = 0; i < masterList.length;) {
        if (masterList[i].address.indexOf(params) != -1 || masterList[i].ip.indexOf(params) != -1 || masterList[i].status.indexOf(params) != -1) {
            list.push(masterList[i]);
        }
        i++;
    }
    callback(list);
};

/**
 * 返回所有主节点信息
 * @param req
 * @param res
 */
Masternode.prototype.listAll = function (req, res) {
    //返回所有主节点信息
    res.jsonp(masterList);
};

/**
 * 更新关注的节点状态
 * @param req
 * @param res
 */
Masternode.prototype.updateMasterNodeStatusForFollow = function (req, res) {
    var addresses = req.query.addresses;
    var data = {};
    if (addresses instanceof Array)
        addresses.forEach(function (addr) {
            data[addr] = masterNodeForKey[addr];
        });
    res.jsonp({data: data});
};

/**
 * 获取所有主节点数据
 */
Masternode.prototype.getMasterNodeAll = function () {
    var self = this;
    self.node.getMasterNode(function (err, list) {
        masterList = [];
        for (var key in list) {
            var array = list[key].split(" ");
            var readData = [];
            for (var i = 0; i < array.length; i++) {
                if (array[i] != "") {
                    readData.push(array[i]);
                }
            }
            var data = {
                //key: key,                    //masternode 主键，具体不知道是什么
                status: readData[0],         //状态
                address: readData[2],        //抵押地址
                ipAndPort: readData[7],      //ip和端口
                ip: readData[7].split(":")[0]
            };
            masterList.push(data);
            masterNodeForKey[data.address] = data;
        }
        self.node.getMasterNodeRate(function (enalblebKeys, allKeys) {
            rate = parseInt((enalblebKeys / allKeys) * 100);
            masterNodeLength = allKeys;
            self.node.getMasterNodeRateCount( function( result ){
                rateCount = result;
                self.Timer();
            } );
        })
    })
};

/**
 * 定时更新节点数据
 * @constructor
 */
Masternode.prototype.Timer = function () {
    var self = this;
    setTimeout(function () {
        self.getMasterNodeAll();
    }, 60 * 1000);
};

module.exports = Masternode;